<UserControl x:Class="PokermetrixWP7.HeadsUpControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:PokermetrixWP7"    
    xmlns:mec="clr-namespace:Microsoft.Expression.Controls;assembly=Microsoft.Expression.Controls"
    mc:Ignorable="d"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    d:DesignHeight="600" d:DesignWidth="420"
    DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="#FFDDDDDD"/>
        </Style>
    </UserControl.Resources>
    
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="110"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="270"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="90"/>
            <RowDefinition Height="90"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Cards -->
        <TextBlock x:Name="tapToDealText"
                               Grid.Row="0"
                               Grid.RowSpan="2"
                               Text="Tap cards to deal..." 
                               FontSize="36"                 
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               TextAlignment="Left"
                               Margin="10, 44, 10, 0"
                               Foreground="White"  
                               Visibility="Collapsed"
                               />

        <Grid x:Name="chartGrid" Grid.Row="0" Margin="0,40,0,-30" Height="100">
            <!--<TextBlock x:Name="cappedChartAnnotation"
                                   Text="+" 
                                   Foreground="Gray" 
                                   FontSize="20" 
                                   HorizontalAlignment="Right"
                                   Margin="0,60,-11,0"
                                   />-->
            <!--<telerikDV:RadBulletGraph x:Name="bulletGraph" 
                                      StartValue="0" 
                                      EndValue="20" 
                                      TickStep="5" 
                                      LabelStep="5"
                                      LabelOffset="25"
                                      Foreground="Gray"
                                      VerticalAlignment="Top"
                                      ComparativeMeasure="0"
                                      FeaturedMeasureThickness="20"
                                      FeaturedMeasure="-0.3"
                                      FeaturedMeasureBrush="{StaticResource PhoneAccentBrush}"
                                      FeaturedMeasureStartValue="-3"
                                      
                                      >
                <telerikDV:RadBulletGraph.ComparativeMeasureTemplate>
                    <DataTemplate>
                        <Rectangle Width="4" Height="80" Fill="White" />
                    </DataTemplate>
                </telerikDV:RadBulletGraph.ComparativeMeasureTemplate>
                <telerikDV:RadBulletGraph.TickTemplate>
                    <DataTemplate>
                        <Rectangle Width="3" Height="10" Margin="0,20,0,0" Fill="Gray" />
                    </DataTemplate>
                </telerikDV:RadBulletGraph.TickTemplate>
                <telerikDV:RadBulletGraph.QualitativeRanges>
                    <telerikDV:BarIndicatorSegment x:Name="darkQualitativeRange" Stroke="#77444444" Thickness="50" Length="0.5"/>
                    <telerikDV:BarIndicatorSegment Stroke="#77777777" Thickness="50" Length="0.0"/>
                    <telerikDV:BarIndicatorSegment x:Name="lightQualitativeRange" Stroke="#77DDDDDD" Thickness="50" Length="0.5"/>
                </telerikDV:RadBulletGraph.QualitativeRanges>
            </telerikDV:RadBulletGraph>-->

            <TextBlock Text="Hand Strength vs Shove Threshold" Foreground="Gray" FontSize="14" Margin="10,60,10,0" HorizontalAlignment="Center"/>
        </Grid>
        
        <Grid Grid.Row="3" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <TextBlock Text="Is opponent All-In?" Grid.Row="0" Grid.ColumnSpan="4" VerticalAlignment="Center" TextWrapping="Wrap" />
            <Canvas Grid.Column="3" Grid.ColumnSpan="5"  HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Height="75" 
                                    Width="75">
            <local:IsSuitedButton x:Name="btnOpponentIsAllIn" 
                                      Height="75" 
                                      Width="75"
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"
                                      OnClick="btnOpponentIsAllIn_OnClick"
                                      />
            </Canvas>
            <Rectangle Fill="#FFDDDDDD" Grid.Row="1" Grid.ColumnSpan="3" Grid.Column="4" Margin="15" />
            <Rectangle Fill="#FFDDDDDD" Grid.Row="2" Grid.ColumnSpan="3" Grid.Column="4" Margin="15" />
            <TextBlock Text="Your Stack" Grid.Row="1" Grid.ColumnSpan="4" VerticalAlignment="Center" />
            <Canvas Grid.Row="1" Grid.Column="3" Margin="-5,5,0,0">
                <local:PlusButton Width="65" Height="65" HorizontalAlignment="Center" OnClick="PlusButton_OnClick"/>
            </Canvas>
            <TextBox x:Name="stackSizeTextBox" Grid.Row="1" Grid.ColumnSpan="3" Grid.Column="4" Text="10000" InputScope="Number" TextAlignment="Right" TextChanged="stackSizeTextBox_TextChanged" FontSize="28" Style="{StaticResource TextBoxStyle}"/>
            <Canvas Grid.Row="1" Grid.Column="7" Margin="-5,5,0,0">
                <local:MinusButton Width="65" Height="65" HorizontalAlignment="Center" OnClick="MinusButton_OnClick" />
            </Canvas>
            <TextBlock Text="Big Blind" Grid.Row="2" Grid.ColumnSpan="4" VerticalAlignment="Center"/>
            <TextBox x:Name="bigBlindSizeTextBox" Grid.Row="2" Grid.ColumnSpan="3" Grid.Column="4" Text="400" InputScope="Number" TextAlignment="Right" TextChanged="bigBlindSizeTextBox_TextChanged" FontSize="28" Style="{StaticResource TextBoxStyle}" />
            <TextBlock Text="Blinds Remaining" Grid.Row="3" Grid.ColumnSpan="4" VerticalAlignment="Center" TextWrapping="Wrap"/>
            <TextBlock x:Name="blindsRemainingTextBlock" Text="20+" Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="5" VerticalAlignment="Center" TextAlignment="Center" FontSize="48" Foreground="White" TextWrapping="Wrap"/>
        </Grid>
        
        
        <!-- Cards -->
        <Grid Grid.Row="6" Grid.RowSpan="2" Width="420">

            <!-- New/Hide Buttons -->
            <local:HideShowButton x:Name="hideShowButton" 
                            Height="75" 
                            Width="75" 
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            OnClick="HideShow"
                            />

            <local:CardVisual x:Name="cardAButton" 
                                          Width="100" 
                                          Height="140" 
                                          HorizontalAlignment="Center" 
                                          RenderTransformOrigin="0.5,0.5"
                                          Margin="0,0,75,0"
                                          OnClick="NewHand"
										  Foreground="Black"
                                          ShortTextBrush="{StaticResource PhoneAccentBrush}">
                <!--                                           MouseLeftButtonUp="NewHand"
                                          MouseLeftButtonDown="cardsFingerDown"-->
                <local:CardVisual.RenderTransform>
                    <RotateTransform Angle="-20"/>
                </local:CardVisual.RenderTransform>
            </local:CardVisual >

            <!-- Distance shadow -->
            <Border Background="#33000000" 
                                Width="100" 
                                Height="140" 
                                HorizontalAlignment="Center" 
                                CornerRadius="15"
                                RenderTransformOrigin="0.5,0.5"
                                Margin="0,0,75,0"
                                IsHitTestVisible="False">
                <Border.RenderTransform>
                    <RotateTransform Angle="-20"/>
                </Border.RenderTransform>
            </Border>
            <!--<Border x:Name="highlightBorderCard1"
                                Width="100" 
                                Height="140" 
                                CornerRadius="15" 
                                BorderBrush="{StaticResource PhoneAccentBrush}" 
                                BorderThickness="5" 
                                RenderTransformOrigin="0.5,0.5"
                                Margin="0,0,50,0"
                                IsHitTestVisible="False">
                            <Border.RenderTransform>
                                <RotateTransform Angle="-20"/>
                            </Border.RenderTransform>
                        </Border>-->

            <local:CardVisual x:Name="cardBButton" 
                                          Width="100" 
                                          Height="140" 
                                          HorizontalAlignment="Center" 
                                          RenderTransformOrigin="0.5,0.5"
                                          Margin="0,0,-75,0"
                                          OnClick="NewHand"
										  Foreground="Black"
                                          ShortTextBrush="{StaticResource PhoneAccentBrush}"
										  >
                <local:CardVisual.RenderTransform>
                    <RotateTransform Angle="20"/>
                </local:CardVisual.RenderTransform>
            </local:CardVisual >


            <!--<Border x:Name="highlightBorderCard2"
                                Width="100" 
                                Height="140" 
                                CornerRadius="15" 
                                BorderBrush="{StaticResource PhoneAccentBrush}" 
                                BorderThickness="5" 
                                RenderTransformOrigin="0.5,0.5"
                                Margin="0,0,-100,0"
                                IsHitTestVisible="False">
                            <Border.RenderTransform>
                                <RotateTransform Angle="20"/>
                            </Border.RenderTransform>
                        </Border>-->

            <!-- Is Suited Checkbox -->
            <Grid x:Name="grdSuited" Width="100" HorizontalAlignment="Right">
                <TextBlock Text="Suited?" 
                                       HorizontalAlignment="Right" 
                                       Margin="0,80,0,50" 
                                       Foreground="Gray"
                                       />
                <local:IsSuitedButton x:Name="btnSuited" 
                                      Height="75" 
                                      Width="75"
                                      HorizontalAlignment="Right" 
                                      VerticalAlignment="Bottom"
                                      OnClick="btnSuited_OnClick"
                                      />
                <!--<CheckBox x:Name="btnSuited2" 
                                      HorizontalAlignment="Right" 
                                      VerticalAlignment="Bottom"
                                      Checked="SwapSuited" 
                                      Unchecked="SwapSuited" 
                                      IsChecked="True" 
                                      IsThreeState="False" 
                                      Visibility="Collapsed"
                                      />-->
            </Grid>
        </Grid>

        <!-- Instructions -->
        <Grid Grid.Row="0" x:Name="gridResult" Grid.RowSpan="2">
            <TextBlock x:Name="lblStrength" 
                           Text="TBC"
                           FontSize="48" 
                           VerticalAlignment="Top"
                           HorizontalAlignment="Center"
                           TextAlignment="Center"
                           Margin="40,40,40,0"
                           Foreground="White"
                           />

            <local:InfoButton Width="70" 
                              Height="70" 
                              HorizontalAlignment="Right" 
                              VerticalAlignment="Top"
                              Margin="0,0,10,0"
                              OnClick="InfoButton_OnClick"
                              />
        </Grid>


    </Grid>
</UserControl>